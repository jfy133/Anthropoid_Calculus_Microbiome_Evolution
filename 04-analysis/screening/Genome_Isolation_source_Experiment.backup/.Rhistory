paste(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5])
str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5]))
str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5])
str_c(unlist(str_split(my_final_database$species[14], " ", n=100)))
str_c(unlist(str_split(my_final_database$species[14], " ", n=100)), collapse=TRUE)
str_c(unlist(str_split(my_final_database$species[14], " ", n=100)), collapse=" ")
str_c(unlist(str_split(my_final_database$species[14], " ", n=100)[1:5]), collapse=" ")
str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" ")
my_final_database_clean <-
my_final_database_clean %>%
mutate(species = (if_else(grep("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
my_final_database_clean <-
my_final_database %>%
mutate(species = (if_else(grep("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
my_final_database_clean <-
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
my_final_database_clean <-
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
my_final_database_clean <-#
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[14], " ", n=100))[1:5], collapse=" "), species)))
grepl('subsp.', my_final_database)
grepl('subsp.', my_final_database$species)
grep('subsp.', my_final_database$species)
for(i in grep('subsp.', my_final_database$species)){print(my_final_database$species[i])}
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(my_final_database$species[species], " ", n=100))[1:5], collapse=" "), species))) %>%
mutate(species = (if_else(grepl("subsp.", species), str_c(unlist(str_split(my_final_database$species[species], " ", n=100))[1:4], collapse=" "), species)))
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(species, " ", n=100))[1:5], collapse=" "), species)))
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species), str_c(unlist(str_split(species, " ", n=100))[1:5], collapse=" "), species)))
my_final_database <- read_tsv("my_final_database.tsv")
my_final_database %>%
mutate(species = (if_else(grepl("sp. oral taxon", species),
str_c(unlist(str_split(species, " ", n=100))[1:5], collapse=" "),
species)))
install("directlabels")
install.packages("directlabels")
library(tidyverse)
library(tidyverse)
library(directlabels)
## load example MEGAN output
megan_data <- read_tsv("08-example_malt_output.tsv")
colnames(megan_data)[1] <- "species"
source_database <- read_tsv("07-master_oralgenome_isolationsource_database_20171114.tsv")
## Join the two
megan_screen_data <- left_join(megan_data, source_database)
## Put the isolation_source column in second position
megan_screen_data <- megan_screen_data %>% select(species,
isolation_source,
1:(ncol(megan_screen_data)-1))
## Mutate 'NA's to Unknown
megan_screen_data <- megan_screen_data %>%
rowwise() %>%
mutate(isolation_source = if_else(is.na(isolation_source), "unknown", isolation_source))
megan_screen_data
## Convert to long table
long_megan_screen_data <- megan_screen_data %>%
gather(sample, count, 3:ncol(megan_screen_data))
## Reorder to descending per group then filter out any species not present
## in a sample
long_megan_screen_data <- long_megan_screen_data %>%
arrange(sample, desc(count)) %>%
filter(count != 0)
long_megan_screen_data <- long_megan_screen_data %>%
mutate(presence = if_else(isolation_source == "oral", 1, 0))
long_megan_screen_data <- long_megan_screen_data%>%
group_by(sample) %>%
mutate(descending_species_order=row_number()) #%>%
long_megan_screen_data <- long_megan_screen_data %>%
group_by(sample) %>%
mutate(cumulative_sum_oral_species = cumsum(presence))
long_megan_screen_data <- long_megan_screen_data%>%
group_by(sample) %>%
add_tally()
long_megan_screen_data
##
x <- c(1:max(long_megan_screen_data$n))
y <- 1:max(long_megan_screen_data$cumulative_sum_oral_species)/x
best_x <- c(1:x)
best_y <- 1-dexp(best_x, rate = 0.1)
medi_y <- 1-dexp(best_x, rate = 0.01)
bad_y <- 1-dexp(best_x, rate = 0.001)
theo_best <- as_tibble(list(x = x, y = y))
ggplot(long_megan_screen_data, aes(descending_species_order, cumulative_sum_oral_species, colour=sample)) +
geom_line() +
geom_line(data = theo_best, aes(x, y)) +
theme_bw() +
theme(legend.position="none")
## Convert to long table
long_megan_screen_data <- megan_screen_data %>%
gather(sample, count, 3:ncol(megan_screen_data))
## Reorder to descending per group then filter out any species not present
## in a sample
long_megan_screen_data <- long_megan_screen_data %>%
arrange(sample, desc(count)) %>%
filter(count != 0)
long_megan_screen_data <- long_megan_screen_data %>%
mutate(presence = if_else(isolation_source == "oral", 1, 0))
long_megan_screen_data <- long_megan_screen_data%>%
group_by(sample) %>%
mutate(descending_species_order=row_number()) #%>%
long_megan_screen_data <- long_megan_screen_data %>%
group_by(sample) %>%
mutate(cumulative_sum_oral_species = cumsum(presence))
long_megan_screen_data <- long_megan_screen_data%>%
group_by(sample) %>%
add_tally()
long_megan_screen_data
##
x <- c(1:max(long_megan_screen_data$n))
y <- 1:max(long_megan_screen_data$cumulative_sum_oral_species)/x
ggplot(long_megan_screen_data, aes(descending_species_order, cumulative_sum_oral_species, colour=sample)) +
geom_line() +
geom_line(data = theo_best, aes(x, y)) +
theme_bw() +
theme(legend.position="none")
megan_screen_data
## Convert to long table
long_megan_screen_data <- megan_screen_data %>%
gather(sample, count, 3:ncol(megan_screen_data))
library(tidyverse)
## Load
raw_otu <- read_tsv("/home/fellows/projects1/calculus_microbiome/misc/fellows/RIII/03-analysis/megan/Comparison-ex_samples_sources_absolute_species_summarised_20180115.txt")
raw_meta <-read_tsv("/home/fellows/projects1/calculus_microbiome/misc/fellows/RIII/03-analysis/megan/Comparison-metadata_20180115.txt")
raw_db <-read_tsv("/home/fellows/projects1/users/fellows/Genome_Isolation_source_Experiment.backup/07-master_oralgenome_isolationsource_database_20171215.tsv")
##Fix
colnames(raw_otu)[1] <- "species"
colnames(raw_meta)[1] <- "sample"
## Check contents of all three
raw_otu
raw_meta
raw_db
combined_data <- left_join(raw_otu, raw_db) %>%
select(species, isolation_source, 2:(ncol(raw_otu)))
combined_data
## Mutate 'NA's to Unknown
combined_data <- combined_data %>%
rowwise() %>%
mutate(isolation_source = if_else(is.na(isolation_source),
"unknown",
isolation_source))
combined_data
combined_data <- gather(combined_data, sample, count, 3:ncol(combined_data))
combined_data
## Arrange firstly by sample then the count. Then make a new column
combined_data_ranked <- combined_data %>%
arrange(sample, desc(count)) %>%
mutate(is_known_oral = if_else(isolation_source == "oral", 1, 0))
## combined data
combined_data_ranked <- combined_data_ranked %>%
group_by(sample) %>%
mutate(abundance_rank_of_species=row_number())
## Calculate the cumulative frequency
combined_data_ranked <- combined_data_ranked %>%
group_by(sample) %>%
mutate(cumulative_sum_of_oral_species = cumsum(is_known_oral))
combined_data_ranked
combined_data_ranked_meta <- left_join(combined_data_ranked, raw_meta)
combined_data_ranked_meta
simple_plot <- ggplot(combined_data_ranked, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = sample)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none")
simple_plot
library("plotly")
ggplotly(simple_plot)
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot
ggplotly(facet_plot)
##
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source") %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
combined_data_ranked_meta
library(tidyverse)
## Load
raw_otu <- read_tsv("/home/fellows/projects1/calculus_microbiome/misc/fellows/RIII/03-analysis/megan/Comparison-ex_samples_sources_absolute_species_summarised_20180115.txt")
raw_meta <-read_tsv("/home/fellows/projects1/calculus_microbiome/misc/fellows/RIII/03-analysis/megan/Comparison-metadata_20180115.txt")
raw_db <-read_tsv("/home/fellows/projects1/users/fellows/Genome_Isolation_source_Experiment.backup/07-master_oralgenome_isolationsource_database_20171215.tsv")
##Fix
colnames(raw_otu)[1] <- "species"
colnames(raw_meta)[1] <- "sample"
## Check contents of all three
raw_otu
raw_meta
raw_db
combined_data <- left_join(raw_otu, raw_db) %>%
select(species, isolation_source, 2:(ncol(raw_otu)))
combined_data
## Mutate 'NA's to Unknown
combined_data <- combined_data %>%
rowwise() %>%
mutate(isolation_source = if_else(is.na(isolation_source),
"unknown",
isolation_source))
combined_data
combined_data <- gather(combined_data, sample, count, 3:ncol(combined_data))
combined_data
## Arrange firstly by sample then the count. Then make a new column
combined_data_ranked <- combined_data %>%
arrange(sample, desc(count)) %>%
mutate(is_known_oral = if_else(isolation_source == "oral", 1, 0))
## combined data
combined_data_ranked <- combined_data_ranked %>%
group_by(sample) %>%
mutate(abundance_rank_of_species=row_number())
## Calculate the cumulative frequency
combined_data_ranked <- combined_data_ranked %>%
group_by(sample) %>%
mutate(cumulative_sum_of_oral_species = cumsum(is_known_oral))
combined_data_ranked
combined_data_ranked_meta <- left_join(combined_data_ranked, raw_meta)
combined_data_ranked_meta
simple_plot <- ggplot(combined_data_ranked, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = sample)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none")
simple_plot
library("plotly")
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot
combined_data_ranked_meta
##
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source") %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
source_averages
## Function to make this faster
my_lm_coef <- function(my_data, rank_column, source_col, my_source){
coef(lm(mean ~ my_column, data = filter(data, source_col == paste(my_source))))
}
skin_slope <- my_lm_coef(source_averages, abundance_rank_of_species, Source_simple, skin)
facet_plot
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = source_averages, aes(abundance_rank_of_species, source_mean,  linetype=2, alpha = 0.5))
facet_wrap(~ Source_Simple)
facet_plot
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = source_averages, aes(abundance_rank_of_species, source_mean, line_type = Source_Simple alpha = 0.5))
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = source_averages, aes(abundance_rank_of_species, source_mean, line_type = Source_Simple, alpha = 0.5))
facet_wrap(~ Source_Simple)
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = source_averages, aes(abundance_rank_of_species, source_mean, line_type = Source_Simple, alpha = 0.5)) +
facet_wrap(~ Source_Simple)
facet_plot
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = filter(source_averages, Source_Simple == "skin"), aes(abundance_rank_of_species, source_mean, alpha = 0.5)) +
facet_wrap(~ Source_Simple)
facet_plot <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = filter(source_averages, Source_Simple == "skin"), aes(abundance_rank_of_species, source_mean, alpha = 0.5)) +
facet_wrap(~ Source_Simple)
facet_plot
ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
theme_minimal() +
theme(legend.position = "none") +
geom_line(data = filter(source_averages, Source_Simple == "skin"), aes(abundance_rank_of_species, source_mean, alpha = 0.5)) +
facet_wrap(~ Source_Simple)
## Get averages
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source") %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
source_averages
## Get average
skin_slope <- coef(lm(mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "skin")))
coef(lm(mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "skin")))
## Get averages
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source") %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
source_averages
## Get average
skin_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "skin")))
soil_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "soil")))
gut_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "gut")))
plaque_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "plaque")))
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=2, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=skin_slope[1], slope=skin_slope[2], linetype=4, alpha=0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=5, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
print("hello")
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=2, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=5, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=3, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=2, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=5, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=2, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=5, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=3, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=5, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=2, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=3, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
facet_plot_guides <- ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=5, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=2, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source", abundance_rank_of_species <= 250) %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
source_averages
## Get average
skin_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "skin")))
soil_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "soil")))
gut_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "gut")))
plaque_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "plaque")))
facet_plot_guides <- ggplot(filter(combined_data_ranked_meta, abundance_rank_of_species <= 250), aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=5, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=2, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
ggplot(combined_data_ranked_meta, aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=5, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=2, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
source_averages <- combined_data_ranked_meta %>%
filter(SourceSink == "source", abundance_rank_of_species <= 250) %>%
group_by(Source_Simple, abundance_rank_of_species) %>%
summarise(source_mean = mean(cumulative_sum_of_oral_species))
source_averages
## Get line data
skin_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "skin")))
soil_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "soil")))
gut_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "gut")))
plaque_slope <- coef(lm(source_mean ~ abundance_rank_of_species, data = filter(source_averages, Source_Simple == "plaque")))
# Plot
facet_plot_guides <- ggplot(filter(combined_data_ranked_meta, abundance_rank_of_species <= 250), aes(abundance_rank_of_species,
cumulative_sum_of_oral_species,
group = sample,
colour = Source_Simple)) +
geom_line() +
geom_abline(intercept=plaque_slope[1], slope=plaque_slope[2], linetype=5, alpha=0.5) +
geom_abline(intercept=soil_slope[1], slope=soil_slope[2], linetype=3, alpha = 0.5) +
geom_abline(intercept=gut_slope[1], slope=gut_slope[2], linetype=2, alpha=0.5) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ Source_Simple)
facet_plot_guides
```
